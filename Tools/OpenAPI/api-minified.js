function ENV(){const e="undefined"!=typeof $task,t="undefined"!=typeof $loon,s="undefined"!=typeof $httpClient&&!t,i="function"==typeof require&&"undefined"!=typeof $ui;return{isQX:e,isLoon:t,isSurge:s,isNode:"function"==typeof require&&!i,isJSBox:i,isRequest:"undefined"!=typeof $request,isScriptable:"undefined"!=typeof importModule}}function HTTP(e={baseURL:""}){const{isQX:t,isLoon:s,isSurge:i,isScriptable:o,isJSBox:n,isNode:r}=ENV(),a=/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&\/\/=]*)/;const h={};return["GET","POST","PUT","DELETE","HEAD","OPTIONS","PATCH"].forEach(u=>h[u.toLowerCase()]=(h=>(function(h,u){u="string"==typeof u?{url:u}:u;const c=e.baseURL;c&&!a.test(u.url||"")&&(u.url=c?c+u.url:u.url),u.body&&u.headers&&!u.headers["Content-Type"]&&(u.headers["Content-Type"]="application/x-www-form-urlencoded");const l=(u={...e,...u}).timeout,d={onRequest:()=>{},onResponse:e=>e,onTimeout:()=>{},...u.events};let f,p;if(d.onRequest(h,u),t)f=$task.fetch({method:h,...u});else if(s||i||r)f=new Promise((e,t)=>{(r?require("request"):$httpClient)[h.toLowerCase()](u,(s,i,o)=>{s?t(s):e({statusCode:i.status||i.statusCode,headers:i.headers,body:o})})});else if(n){var y=u.url,$=u.headers,g=u.body;f=new Promise((e,t)=>{$http.request({method:h,url:y,header:$,body:g,handler:function(s){s.error?t(s.error):e({statusCode:s.response.statusCode,headers:s.response.headers,body:s.data})}})})}else if(o){const e=new Request(u.url);e.method=h,e.headers=u.headers,e.body=u.body,f=new Promise((t,s)=>{e.loadString().then(s=>{t({statusCode:e.response.statusCode,headers:e.response.headers,body:s})}).catch(e=>s(e))})}const m=l?new Promise((e,t)=>{p=setTimeout(()=>(d.onTimeout(),t(`${h} URL: ${u.url} exceeds the timeout ${l} ms`)),l)}):null;return(m?Promise.race([m,f]).then(e=>(clearTimeout(p),e)):f).then(e=>d.onResponse(e))})(u,h))),h}function API(e="untitled",t=!1){const{isQX:s,isLoon:i,isSurge:o,isNode:n,isJSBox:r,isScriptable:a}=ENV();return new class{constructor(e,t){this.name=e,this.debug=t,this.logs=[],this.http=HTTP(),this.env=ENV(),this.node=(()=>{if(n){return{fs:require("fs")}}return null})(),this.initCache();Promise.prototype.delay=function(e){return this.then(function(t){return((e,t)=>new Promise(function(s){setTimeout(s.bind(null,t),e)}))(e,t)})}}initCache(){if(s&&(this.cache=JSON.parse($prefs.valueForKey(this.name)||"{}")),(i||o)&&(this.cache=JSON.parse($persistentStore.read(this.name)||"{}")),r&&(this.cache=JSON.parse($cache.get(this.name)||"{}")),n){let e="root.json";this.node.fs.existsSync(e)||this.node.fs.writeFileSync(e,JSON.stringify({}),{flag:"wx"},e=>console.log(e)),this.root={},e=`${this.name}.json`,this.node.fs.existsSync(e)?this.cache=JSON.parse(this.node.fs.readFileSync(`${this.name}.json`)):(this.node.fs.writeFileSync(e,JSON.stringify({}),{flag:"wx"},e=>console.log(e)),this.cache={})}}persistCache(){const e=JSON.stringify(this.cache,null,2);s&&$prefs.setValueForKey(e,this.name),(i||o)&&$persistentStore.write(e,this.name),r&&$cache.set(this.name,e),n&&(this.node.fs.writeFileSync(`${this.name}.json`,e,{flag:"w"},e=>console.log(e)),this.node.fs.writeFileSync("root.json",JSON.stringify(this.root,null,2),{flag:"w"},e=>console.log(e)))}write(e,t){if(this.log(`SET ${t}`),-1!==t.indexOf("#")){if(t=t.substr(1),o||i)return $persistentStore.write(e,t);if(s)return $prefs.setValueForKey(e,t);n&&(this.root[t]=e),r&&$cache.set(t,e)}else this.cache[t]=e;this.persistCache()}read(e){return this.log(`READ ${e}`),-1===e.indexOf("#")?this.cache[e]:(e=e.substr(1),o||i?$persistentStore.read(e):s?$prefs.valueForKey(e):n?this.root[e]:r?$cache.get(e):void 0)}delete(e){if(this.log(`DELETE ${e}`),-1!==e.indexOf("#")){if(e=e.substr(1),o||i)return $persistentStore.write(null,e);if(s)return $prefs.removeValueForKey(e);n&&delete this.root[e],r&&$cache.remove(e)}else delete this.cache[e];this.persistCache()}notify(e,t="",a="",h={}){const u=h["open-url"],c=h["media-url"];if(s&&$notify(e,t,a,h),o&&$notification.post(e,t,a+`${c?"\n多媒体:"+c:""}`,{url:u}),i){let s={};u&&(s.openUrl=u),c&&(s.mediaUrl=c),"{}"===JSON.stringify(s)?$notification.post(e,t,a):$notification.post(e,t,a,s)}if(r){const s=a+(u?`\n点击跳转: ${u}`:"")+(c?`\n多媒体: ${c}`:"");$push.schedule({title:e,body:t+s})}if(n){const s=t+(a+(u?`\n点击跳转: ${u}`:"")+(c?`\n多媒体: ${c}`:""));require("./sendNotify").sendNotify(e,s)}}msg(...e){e.length>0&&(this.logs=[...this.logs,...e]),this.log(e)}log(e){this.debug&&console.log(`[${this.name}] LOG: ${this.stringify(e)}`)}info(e){console.log(`[${this.name}] INFO: ${this.stringify(e)}`)}error(e){console.log(`[${this.name}] ERROR: ${this.stringify(e)}`)}wait(e){return new Promise(t=>setTimeout(t,e))}done(e={}){s||i||o?$done(e):n&&!r&&"undefined"!=typeof $context&&($context.headers=e.headers,$context.statusCode=e.statusCode,$context.body=e.body)}parse(e){if("string"==typeof e||e instanceof String)try{return JSON.parse(e)}catch(e){this.msg("parse出错了")}else try{return JSON.parse(JSON.stringify(e))}catch(e){this.msg("parse出错了")}}stringify(e){if("string"==typeof e||e instanceof String)return e;try{return JSON.stringify(e,null,2)}catch(e){this.msg("stringify出错了")}}}(e,t)}